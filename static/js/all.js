"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,a){if(e){if("string"==typeof e)return _arrayLikeToArray(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,a):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,o=new Array(a);t<a;t++)o[t]=e[t];return o}var countriesData=[],worldwideData=[],dailyChangeCases=[],dailyChangeDeaths=[],dailyChangeRecovered=[],totalChange=[],totalDeaths=[],totalRecovered=[],countryTotalChange=[],countryTotalDeaths=[],countryTotalRecovered=[],myMap=L.map("mapid").setView([25.505,-.09],2);L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw",{attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(myMap);var latLong=[],options={series:[{name:"Daily Covid Cases",data:[]},{name:"Daily Covid Deaths",data:[]}],chart:{type:"area",stacked:!1,height:"330px",zoom:{type:"x",enabled:!0,autoScaleYaxis:!0},toolbar:{autoSelected:"zoom"},animations:{enabled:!0,easing:"ease",speed:200,animateGradually:{enabled:!1,delay:10},dynamicAnimation:{enabled:!0,speed:550}}},theme:{mode:"light",palette:"palette3",monochrome:{enabled:!1,color:"#255aee",shadeTo:"light",shadeIntensity:.65}},yaxis:{labels:{formatter:function(e){if(e){var a=e.toFixed(1);return numberWithCommas(Math.round(a))}}},title:{text:"Recorded Numbers"}},xaxis:{type:"datetime"},dataLabels:{enabled:!1},tooltip:{y:[{title:{formatter:function(e){return e}}},{title:{formatter:function(e){return e}}}]}},chart=new ApexCharts(document.querySelector("#chart"),options);chart.render(),$("#chart-dropdown").on("change",function(){console.log("Chainging....",this.value),"1"===this.value&&(console.log("ONe"),chart.updateSeries([{name:"Daily Covid Cases",data:dailyChangeCases},{name:"Daily Covid Deaths",data:dailyChangeDeaths}])),"2"===this.value&&(console.log("Two"),chart.updateSeries([{name:"Total Cases",data:totalChange},{name:"Total Deaths",data:totalDeaths},{name:"Total Recovered",data:totalRecovered}]))});var options2={series:[{name:"Daily Covid Cases",data:[]},{name:"Daily Covid Deaths",data:[]}],chart:{type:"area",stacked:!1,height:"100%",zoom:{type:"x",enabled:!0,autoScaleYaxis:!0},toolbar:{autoSelected:"zoom"},animations:{enabled:!0,easing:"ease",speed:200,animateGradually:{enabled:!1,delay:10},dynamicAnimation:{enabled:!0,speed:550}}},theme:{mode:"light",palette:"palette3",monochrome:{enabled:!1,color:"#255aee",shadeTo:"light",shadeIntensity:.65}},dataLabels:{enabled:!1},markers:{size:0},fill:{type:"gradient",gradient:{shadeIntensity:1,inverseColors:!1,opacityFrom:.5,opacityTo:0,stops:[0,90,100]}},yaxis:{labels:{formatter:function(e){if(e){var a=e.toFixed(1);return numberWithCommas(Math.round(a))}}},title:{text:"Recorded Numbers"}},xaxis:{type:"datetime"},tooltip:{y:[{title:{formatter:function(e){return e}}},{title:{formatter:function(e){return e}}}]}},chart2=new ApexCharts(document.querySelector("#chart2"),options2);chart2.render();var table1=$("#table1").DataTable({paging:!1,mark:!0,responsive:!0,scrollY:"420px",scrollX:!0,columns:[{data:"country",width:"10%"},{data:"cases",width:"10%",render:$.fn.dataTable.render.number(",",2,"")},{data:"deaths",width:"10%",render:$.fn.dataTable.render.number(",",2,"")},{data:"recovered",width:"10%",render:$.fn.dataTable.render.number(",",2,"")},{data:"tests",width:"10%",render:$.fn.dataTable.render.number(",",2,"")},{data:"deathsPerOneMillion",width:"10%",render:$.fn.dataTable.render.number(",",2,"")},{data:"todayCases",width:"10%",render:$.fn.dataTable.render.number(",",2,"")}]});function startFunc(){console.log("APP IS STARTING..."),Promise.all([fetch("https://disease.sh/v3/covid-19/all"),fetch("https://disease.sh/v3/covid-19/countries"),fetch("https://disease.sh/v3/covid-19/historical/all?lastdays=400"),fetch("https://disease.sh/v3/covid-19/historical/UK?lastdays=5000")]).then(function(e){return Promise.all(e.map(function(e){return e.json()}))}).then(function(e){worldwideData.push(e[0]),countriesData.push.apply(countriesData,_toConsumableArray(e[1])),$("#total-cases").html(numberWithCommas(e[0].cases)),$("#total-deaths").html(numberWithCommas(e[0].deaths)),$("#total-recovered").html(numberWithCommas(e[0].todayRecovered)),$("#total-countries").html(e[0].affectedCountries),e[1].forEach(function(e){var a=L.circle([e.countryInfo.lat,e.countryInfo.long],{color:"red",fillColor:"#f03",fillOpacity:.5,radius:9*e.deaths}).bindTooltip("".concat(e.country," : ").concat(numberWithCommas(e.deaths)," deaths")).openTooltip();0<e.deaths&&a.addTo(myMap)});for(var a,t,o,n=0;n<Object.keys(e[2].cases).length;n++){n!==Object.keys(e[2].cases).length-1&&(t=[],o=[],(a=[]).push(Object.keys(e[2].cases)[n],Object.values(e[2].cases)[n+1]-Object.values(e[2].cases)[n]),dailyChangeCases.push(a),t.push(Object.keys(e[2].deaths)[n],Object.values(e[2].deaths)[n+1]-Object.values(e[2].deaths)[n]),dailyChangeDeaths.push(t),o.push(Object.keys(e[2].recovered)[n],Object.values(e[2].recovered)[n+1]-Object.values(e[2].recovered)[n]),dailyChangeRecovered.push(o),totalChange.push([Object.keys(e[2].cases)[n],Object.values(e[2].cases)[n]]),totalDeaths.push([Object.keys(e[2].deaths)[n],Object.values(e[2].deaths)[n]]),totalRecovered.push([Object.keys(e[2].recovered)[n],Object.values(e[2].recovered)[n]]))}chart.updateSeries([{name:"Daily Covid Cases",data:dailyChangeCases},{name:"Daily Covid Deaths",data:dailyChangeDeaths}]),$("#table1").dataTable().fnAddData(e[1]);for(var r=0;r<Object.keys(e[3].timeline.cases).length;r++)r!==Object.keys(e[3].timeline.cases).length-1&&(countryTotalChange.push([Object.keys(e[3].timeline.cases)[r],Object.values(e[3].timeline.cases)[r]]),countryTotalDeaths.push([Object.keys(e[3].timeline.deaths)[r],Object.values(e[3].timeline.deaths)[r]]),countryTotalRecovered.push([Object.keys(e[3].timeline.recovered)[r],Object.values(e[3].timeline.recovered)[r]]));chart2.updateSeries([{name:"Total Covid Cases",data:countryTotalChange},{name:"Total Covid Deaths",data:countryTotalDeaths},{name:"Total Covid Recovered",data:countryTotalRecovered}]);for(var s=0;s<countriesData.length;s++)console.log(countriesData[s]),"worldwide"!==countriesData[s].country&&jQuery("<option>",{value:countriesData[s].country,html:countriesData[s].country}).appendTo(".dropdown1");$(".dropdown1").val("UK"),setTimeout(function(){var e=countriesData.filter(function(e){return"UK"===e.country}),a="\n            <div class='grid-2'>\n            <div>\n                <label>Active Cases</label>\n                <p>".concat(numberWithCommas(e[0].active)||"__not provided___","</p>\n                </div>\n\n                <div>\n                <label>Critical Cases</label>\n                <p>").concat(numberWithCommas(e[0].critical)||"__not provided___","</p>\n                </div>\n                <div>\n                <label>Total Deaths</label>\n                <p>").concat(numberWithCommas(e[0].deaths)||"__not provided___","</p>\n                </div>\n                <div>\n                <label>Total Deaths per Million</label>\n                <p>").concat(e[0].deathsPerOneMillion||"__not provided___","</p>\n                </div>\n                <div>\n                <label>Total population</label>\n                <p>").concat(numberWithCommas(e[0].population)||"__not provided___","</p>\n                </div>\n                <div>\n                <label>Total recovered</label>\n                <p>").concat(numberWithCommas(e[0].recovered)||"__not provided___","</p>\n                </div>\n                <div>\n                <label>Daily Deaths</label>\n                <p>").concat(e[0].todayDeaths||"__not provided___","</p>\n                </div>\n                <div>\n                <label>Daily Cases</label>\n                <p>").concat(e[0].todayCases||"__not provided___","</p>\n                </div>\n                <div>\n                <label>Daily Recovered</label>\n                <p>").concat(e[0].todayRecovered||"__not provided___","</p>\n                </div>\n            </div>");$("#country-facts").html(a),$("#chosen-country").html("<h3>".concat(e[0].country||"__not provided___","</h3>"))},10)}).catch(function(e){return console.log(e)})}function numberWithCommas(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}$(".dropdown1").on("change",function(){var n=this;countryTotalChange=[],countryTotalDeaths=[],countryTotalRecovered=[],$("#facts-spinner").css({opacity:1,display:"block"}),$("#country-facts").html(""),fetch("https://disease.sh/v3/covid-19/historical/".concat(this.value,"?lastdays=400"),{}).then(function(e){return e.json()}).then(function(e){if(console.log(e),"Country not found or doesn't have any historical data"!==e.message){for(var a=0;a<Object.keys(e.timeline.cases).length;a++)a!==Object.keys(e.timeline.cases).length-1&&(countryTotalChange.push([Object.keys(e.timeline.cases)[a],Object.values(e.timeline.cases)[a]]),countryTotalDeaths.push([Object.keys(e.timeline.deaths)[a],Object.values(e.timeline.deaths)[a]]),countryTotalRecovered.push([Object.keys(e.timeline.recovered)[a],Object.values(e.timeline.recovered)[a]]));chart2.updateSeries([{name:"Total Covid Cases",data:countryTotalChange},{name:"Total Covid Deaths",data:countryTotalDeaths},{name:"Total Covid Recovered",data:countryTotalRecovered}]);countriesData.filter(function(e){return e.country===n.value});var t=countriesData.filter(function(e){return e.country===n.value}),o="\n        <div class='grid-2'>\n            <div>\n            <label>Active Cases</label>\n            <p>".concat(numberWithCommas(t[0].active)||"__not provided___","</p>\n            </div>\n\n            <div>\n            <label>Critical Cases</label>\n            <p>").concat(numberWithCommas(t[0].critical)||"__not provided___","</p>\n            </div>\n            <div>\n            <label>Total Deaths</label>\n            <p>").concat(numberWithCommas(t[0].deaths)||"__not provided___","</p>\n            </div>\n            <div>\n            <label>Total Deaths per Million</label>\n            <p>").concat(t[0].deathsPerOneMillion||"__not provided___","</p>\n            </div>\n            <div>\n            <label>Total population</label>\n            <p>").concat(numberWithCommas(t[0].population)||"__not provided___","</p>\n            </div>\n            <div>\n            <label>Total recovered</label>\n            <p>").concat(numberWithCommas(t[0].recovered)||"__not provided___","</p>\n            </div>\n            <div>\n            <label>Daily Deaths</label>\n            <p>").concat(t[0].todayDeaths||"__not provided___","</p>\n            </div>\n            <div>\n            <label>Daily Cases</label>\n            <p>").concat(t[0].todayCases||"__not provided___","</p>\n            </div>\n            <div>\n            <label>Daily Recovered</label>\n            <p>").concat(t[0].todayRecovered||"__not provided___","</p>\n            </div>\n        </div>");$("#country-facts").html(o),$("#chosen-country").html("<h3>".concat(t[0].country||"__not provided___","</h3>")),$("#facts-spinner").css({opacity:0,display:"none"})}else alert("No Historical Data for this country, please choose another!")}).catch(function(e){console.log(e)})}),$("#left-home").on("click",function(){$("#right").addClass("show"),$("#right-facts").removeClass("show"),$("#right-search").removeClass("show"),setTimeout(function(){myMap.invalidateSize()},10)}),$("#left-about").on("click",function(){$("#right").removeClass("show"),$("#right-facts").addClass("show"),$("#right-search").removeClass("show")}),$("#left-search").on("click",function(){$("#right-search").addClass("show"),$("#right").removeClass("show"),$("#right-facts").removeClass("show")}),$("#left-about, #left-home, #left-search").on("click",function(){$("li").removeClass("active"),$(this).addClass("active")}),window.addEventListener("resize",function(){setTimeout(function(){myMap.invalidateSize()},10)});